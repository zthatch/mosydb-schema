# generated by datamodel-codegen:
#   filename:  group.json
#   timestamp: 2021-09-10T06:28:00+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field

from .helper import personame


class Status(Enum):
    active = 'active'
    non_active = 'non-active'
    pending = 'pending'


class Location(BaseModel):
    institute: str = Field(..., description='place of research', title='institute')
    city: str = Field(..., description='place of research', title='city')
    state: Optional[str] = Field(None, description='place of research', title='state')
    country: str = Field(..., description='place of research', title='country')


class Group(BaseModel):
    _id: str = Field(..., alias='@id', description='id of the user', title='group@id')
    status: Status = Field(
        ..., description='status of the user, e.g. active or non-active', title='status'
    )
    PIname: personame.PersonName
    email: Optional[str] = Field(
        None, description='a proper email for contacting the PI', title='email'
    )
    location: Location = Field(..., title='location')
    related_users: Optional[List] = Field(
        None, description="list of users @id's who work with this PI", title='user@ids'
    )
