# generated by datamodel-codegen:
#   filename:  helper/value.json
#   timestamp: 2021-09-10T06:28:00+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Value1(BaseModel):
    planned: Optional[float] = Field(
        None,
        description='the planned quantity of the property',
        title='quantity-planned',
    )
    actual: Optional[float] = Field(
        None,
        description='the planned quantity of the property',
        title='quantity-actual',
    )
    actual_list: Optional[List] = Field(
        None, description='a list of planned quantities', title='_key'
    )


class Numerical(BaseModel):
    value: Optional[Value1] = Field(None, title='_key')
    units: Optional[str] = Field(
        None, description='the units of the quantity', title='unit'
    )


class Value(BaseModel):
    name: Optional[str] = Field(
        None,
        description='description of the quantity, e.g. units: temperature, speed, rate, amount, etc.',
        title='_key',
    )
    numerical: Optional[Numerical] = Field(None, title='_key')
    verbal: Optional[str] = Field(
        None,
        description='qualitative descriptions, e.g. dissolved, clear, opaque, hot, cold, room temperature, steaming',
        title='_key',
    )
