# generated by datamodel-codegen:
#   filename:  user.json
#   timestamp: 2021-09-10T06:28:00+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field

from .helper import personame


class Status1(Enum):
    active = 'active'
    non_active = 'non-active'
    pending = 'pending'


class User(BaseModel):
    _id: Optional[str] = Field(
        None, alias='@id', description='id of the user', title='user@id'
    )
    group: Optional[str] = Field(None, description='related group ID', title='group@id')
    name: Optional[personame.PersonName] = None
    email: Optional[str] = Field(
        None, description='a proper email for contacting the user', title='email'
    )
    status: Optional[Status1] = Field(
        None,
        description='the status of the user - whether is active or not',
        title='status',
    )
    related_experiments: Optional[List] = Field(
        None,
        description="list of experiment @id's that relate to this user",
        title='experiment@ids',
    )
